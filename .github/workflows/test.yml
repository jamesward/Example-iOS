name: "build-test"
on:
  push

jobs:
  build: # make sure build/ci work properly
    runs-on: macOS-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v2

    - name: import certs
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

    - name: download provisioning profiles
      uses: apple-actions/download-provisioning-profiles@v1
      with:
        bundle-id: ${{ secrets.BUNDLE_ID }}
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

    - name: build archive
      env:
          WORKSPACE: Example-iOS.xcworkspace
          SCHEME: Example-iOS
          CONFIGURATION: Release
          SDK: iphoneos
      run: |
        cd Example-iOS
        if [ "${{ github.ref_type }}" = "tag" ]; then
          agvtool new-marketing-version ${GITHUB_REF_NAME#v} -workspace "${WORKSPACE}"
        fi
          
        xcrun agvtool new-version -all ${GITHUB_RUN_NUMBER} -workspace "${WORKSPACE}"
        cd ..
        
        xcrun xcodebuild \
          -workspace "${WORKSPACE}" \
          -scheme "${SCHEME}" \
          -configuration "${CONFIGURATION}" \
          -sdk "${SDK}" \
          -parallelizeTargets \
          -showBuildTimingSummary \
          -disableAutomaticPackageResolution \
          -derivedDataPath "${RUNNER_TEMP}/Build/DerivedData" \
          -archivePath "${RUNNER_TEMP}/Build/Archives/${SCHEME}.xcarchive" \
          -resultBundlePath "${RUNNER_TEMP}/Build/Artifacts/${SCHEME}.xcresult" \
          -destination "generic/platform=iOS" \
          DEVELOPMENT_TEAM="${{ secrets.APPSTORE_TEAM_ID }}" \
          PRODUCT_BUNDLE_IDENTIFIER="${{ secrets.BUNDLE_ID }}" \
          CODE_SIGN_STYLE="Manual" \
          PROVISIONING_PROFILE_SPECIFIER="${{ secrets.DEV_PROVISIONING_PROFILE_NAME }}" \
          archive

    - name: "Generate ExportOptions.plist"
      run: |
        cat <<EOF > ${RUNNER_TEMP}/Build/ExportOptions.plist
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
          <dict>
            <key>destination</key>
            <string>export</string>
            <key>method</key>
            <string>app-store</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>generateAppStoreInformation</key>
            <true/>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>teamID</key>
            <string>${{ secrets.APPSTORE_TEAM_ID }}</string>
            <key>uploadSymbols</key>
            <true/>
            <key>provisioningProfiles</key>
            <dict>
              <key>${{ secrets.BUNDLE_ID }}</key>
              <string>${{ secrets.DIST_PROVISIONING_PROFILE_NAME }}</string>
            </dict>
          </dict>
        </plist>
        EOF

    - name: export archive
      env:
        SCHEME: Example-iOS
      run: |
        xcrun xcodebuild \
          -exportArchive \
          -exportOptionsPlist "${RUNNER_TEMP}/Build/ExportOptions.plist" \
          -archivePath "${RUNNER_TEMP}/Build/Archives/${SCHEME}.xcarchive" \
          -exportPath "${RUNNER_TEMP}/Build/Archives/${SCHEME}.xcarchive/${SCHEME}.ipa"

    - uses: Apple-Actions/upload-testflight-build@v1
      env:
        SCHEME: Example-iOS
      with:
        app-path: ${RUNNER_TEMP}/Build/Archives/${SCHEME}.xcarchive/${SCHEME}.ipa"
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
